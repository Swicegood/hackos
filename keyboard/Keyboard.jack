// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        var char code;
        let code = Memory.peek(24576);
        if(~(code = 0)){
            return code;
        }
        else{
            return 0;
        }
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char c;
        var char keypressed;
   //     do Output.printChar(95);
        let keypressed = Keyboard.keyPressed();
        while(keypressed = 0){
            let keypressed = Keyboard.keyPressed();
        }
        let c = keypressed;
        while(~(keypressed = 0)){
            let keypressed = Keyboard.keyPressed();
        }
        do Output.printChar(c);
        return c;

    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String str;
        var char c;
        let str = String.new(128);
        do Output.printString(message);
        while(true){
            let c  = Keyboard.readChar();
            if(c=128){
                do Output.println();
                return str;
            }
            else{
                if(c = 129){
                    do str.eraseLastChar();
                    do Output.backSpace();
                }
                else{
                    do str.appendChar(c);
                }
            }
        }
        return str;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String numstr;
        var int target;
        var int pwr10;
        var int len;
        var int i;
        var int z;
        var char c;
        let numstr = Keyboard.readLine(message);
        let len = numstr.length();
        let pwr10 = 1;
        let i = 1;
        let target = 0;
        while((i < len)|(i = len)){
            let z = len - i;
            let c = numstr.charAt(z);
            if((z = 0)&(c = 45)){
                let target = -target;
                return target;
            }
            else{
                let target = target + ((c - 48) * pwr10);
                let pwr10 = pwr10 * 10;
            }
            let i = i + 1;
        } 
        return target;
    }
}
